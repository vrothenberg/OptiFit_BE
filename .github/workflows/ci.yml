name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # Allows manual triggering from GitHub UI

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: optifit_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build shared module
      run: npm run build:shared

    - name: Lint
      run: npm run lint

    - name: Check code formatting
      run: npx prettier --check "**/*.{ts,js,json}"

    - name: Run unit tests with coverage
      run: npm test -- --coverage --passWithNoTests
      env:
        JWT_SECRET: test_jwt_secret
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/optifit_test
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

    - name: Set up test environment
      run: |
        cp .env.example .env
        sed -i 's/DATABASE_URL=.*/DATABASE_URL=postgresql:\/\/postgres:postgres@localhost:5432\/optifit_test/' .env
        sed -i 's/JWT_SECRET=.*/JWT_SECRET=test_jwt_secret/' .env
        sed -i 's/GEMINI_API_KEY=.*/GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}/' .env

    - name: Run e2e tests
      run: |
        cd services/user-service && npm run test:e2e
        cd ../logging-service && npm run test:e2e
        cd ../ai-service && npm run test:e2e
      env:
        JWT_SECRET: test_jwt_secret
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/optifit_test
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit --production

    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'OptiFit'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --failOnCVSS 7
          --enableRetired

    - name: Upload dependency check report
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: reports
