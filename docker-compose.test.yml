version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: optifit_test
    ports:
      - "5432:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/optifit_test
      - JWT_SECRET=test_jwt_secret
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "cd services/user-service && npm run test:e2e"

  logging-service-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/optifit_test
      - JWT_SECRET=test_jwt_secret
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "cd services/logging-service && npm run test:e2e"

  ai-service-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - JWT_SECRET=test_jwt_secret
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - .:/app
      - /app/node_modules
    command: >
      sh -c "cd services/ai-service && npm run test:e2e"

volumes:
  postgres_test_data:
